plugins {
	id 'java-gradle-plugin'
	id 'groovy'
	id 'maven'
}
jar.baseName = 'releaseNotes'
group = 'com.spidasoftware'
version = '0.3-SNAPSHOT'
sourceCompatibility = 1.7
targetCompatibility = 1.7

try {
	project.ext.m2Settings = [exposed:"https://dev.spidasoftware.com/artifactory/exposed-repo"]//default
	def m2Root = new XmlSlurper().parse(new File(System.getProperty("user.home"), ".m2/settings.xml"))
	def m2Spida = m2Root.servers.server.find{ it.id.text() == "spida" }
	def m2Repos = m2Root.profiles.profile.find{ it.id.text() == "artifactory" }.properties
	if(m2Spida && m2Repos){
		project.ext.m2Settings = [username: m2Spida.username.text(), password: m2Spida.password.text(), exposed: m2Repos.exposedLocation.text()]
	}
} catch(ex){
	println ex.message //use ex.printStackTrace() if you want to show the full stacktrace 
}

repositories {
	mavenCentral()
	maven { url m2Settings.exposed }
}

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile group:'org.codehaus.groovy.modules.http-builder', name:'http-builder', version: '0.7'
	testCompile group: 'junit', name: 'junit', version: '4.11'
}

configurations {
	deployerJars
}
uploadArchives {
	repositories {
		mavenDeployer {
			snapshotRepository(url: "${System.getenv('ARTIFACTORY_URL_BASE')}/libs-snapshot-local") {
				authentication(userName: System.getenv('ARTIFACTORY_USERNAME'), password: System.getenv('ARTIFACTORY_PASSWORD'))
			}

			repository(url: "${System.getenv('ARTIFACTORY_URL_BASE')}/libs-release-local") {
				authentication(userName: System.getenv('ARTIFACTORY_USERNAME'), password: System.getenv('ARTIFACTORY_PASSWORD'))
			}
		}
	}
}



// change gradle to automatically pull the newest version of all snapshot dpendencies marked "changing"
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'hours'
}

test {
	testLogging.showStandardStreams = true
}

gradlePlugin {
	plugins {
		simplePlugin {
			id = 'com.spidasoftware.releaseNotes'
			implementationClass = 'com.spidasoftware.releasenotes.ReleaseNotesPlugin'
		}
	}
}